<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[sql injection 1]]></title>
    <url>%2F2018%2F05%2F30%2Fpost4%2F</url>
    <content type="text"><![CDATA[False注入 以xxxxx=0为主题 两张图中 用 username=0 passwd=0 分别爆出数据库 但数据个数不同首先为什么会爆出数据库？涉及到MYSQL隐式类型转化 关于官方文档中是这么说的 The following rules describe how conversion occurs for comparison operations: If one or both arguments are NULL, the result of the comparison is NULL, except for the NULL-safe &lt;=&gt; equality comparison operator. For NULL &lt;=&gt; NULL, the result is true. No conversion is needed. If both arguments in a comparison operation are strings, they are compared as strings. If both arguments are integers, they are compared as integers. Hexadecimal values are treated as binary strings if not compared to a number. If one of the arguments is a TIMESTAMP or DATETIME column and the other argument is a constant, the constant is converted to a timestamp before the comparison is performed. This is done to be more ODBC-friendly. Note that this is not done for the arguments to IN()! To be safe, always use complete datetime, date, or time strings when doing comparisons. For example, to achieve best results when using BETWEEN with date or time values, use CAST() to explicitly convert the values to the desired data type. If one of the arguments is a decimal value, comparison depends on the other argument. The arguments are compared as decimal values if the other argument is a decimal or integer value, or as floating-point values if the other argument is a floating-point value. In all other cases, the arguments are compared as floating-point (real) numbers. 其中大致是： 如果两个参数比较，有至少一个NULL，结果就是NULL，除了是用NULL&lt;=&gt;NULL 会返回1。不做类型转换 两个参数都是字符串，按照字符串比较。不做类型转换 两个参数都是整数，按照整数比较。不做类型转换 如果不与数字进行比较，则将十六进制值视为二进制字符串。 有一个参数是 TIMESTAMP 或 DATETIME，并且另外一个参数是常量，常量会被转换为时间戳 有一个参数是 decimal 类型，如果另外一个参数是 decimal 或者整数，会将整数转换为 decimal 后进行比较，如果另外一个参数是浮点数，则会把 decimal 转换为浮点数进行比较 所有其他情况下，两个参数都会被转换为浮点数再进行比较 注意最后一句话就行: 有其他情况下，两个参数都会被转换为浮点数再进行比较这里=之前的username 和pwd都是字符串 =之后的0是数字 所以这里当字符串转换为浮点数 username中admin test leej都是以字母开头 passwd以数字开头 当字符串转换为浮点数时 如果数字开头 则会从数字后截断 所以这里才会存在username爆出三段数据 passwd爆出两端数据 除此之外还可以通过比较运算符来构造xxxxx=0这里就举几个例子 where username=&apos;&apos;=0&lt;=&gt;1#&apos; ‘’=0&lt;=&gt;1#’ 首先最后的’被#截断 整体变为’’=0&lt;=&gt;1 ‘’=0 结果为0 整体变为 0&lt;==&gt;1 结果为 0所以最后转化成为 username=0 到这里想起之前注入的几个函数再复习下 1.left()/right() left/right(str,length) eg: SELECT LEFT(NAME,2),RIGHT(NAME,2) FROM T1 返回结果为 ‘NA’ 、’ME’ *从字符串左边开始截取长度为2的字符串 从字符串右边开始截取长度为2的字符串 2.substr() substr(str,begin-location,length(可选)) 规定在字符串的何处开始。 length：正数 - 在字符串的指定位置开始 负数 - 在从字符串结尾开始的指定位置开始 0 - 在字符串中的第一个字符处开始 3.mid() mid(str,begin-location,length(可选)) 与substr唯一区别在于mid必须规定开始位置 且起始值为1 4.rand() rand(begin,end) 即begin-end之间取随机数 5.if() if(a,b,c) 如果a=ture 则返回b 如果a=false 则返回c ——————————今晚结束————————————总结一个字：太菜！！！]]></content>
      <categories>
        <category>Learning</category>
        <category>sql injection</category>
      </categories>
      <tags>
        <tag>sql injection</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python basic 2]]></title>
    <url>%2F2018%2F05%2F30%2Fpost3%2F</url>
    <content type="text"><![CDATA[块注释: 三个单引号或者双引号开始结束 查看关键字方法 import keyword –&gt;keyword.kwlist //去试试换行输出 标准数据 六种 数字类型 Number字符串类型 str列表 list元组 tuple字典 Dictionary集合 set -数字类型：无大小限制二进制：以0b开头八进制：以为0o开头 包含0-7的数字十六进制：每四位二进制表示一位十六进制数 包含0-9 a-f 以0x开头//百度算法 单引号双引号只能表示一行字符串的格式化 -利用百分号% 例如 单个 print(“I love %s” % “dsadas”)双个 print(“I love %s ,she are %d” % (“asdas”,12)) format函数格式化 -利用format函数 推荐以{} 和： 代替 分号 后面用format带参数完成 python无自增自减 逻辑运算符 转为数学运算 我觉得这个太巧妙了！！！短路问题 一旦能够确定整个式子值 后面都不运算 精辟！！！ 成员运算符号in not in 身份运算 is is not]]></content>
      <categories>
        <category>Learning</category>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python basic 1]]></title>
    <url>%2F2018%2F05%2F29%2FLearing%20process-python%20basic%201%2F</url>
    <content type="text"><![CDATA[python大小写敏感 注释符 # 在Python中有4种类型的数——整数、长整数、浮点数和复数。 (-5+4j)和(2.3-4.6j)是复数的例子 注意py里是a±bj 数学公式里是a±bi在py中 ‘ ’ ===“ ” 所有的空白，即空格和制表符都照原样保留 在一个字符串中，行末的单独一个反斜杠表示字符串在下一行继续，而不是开始一个新的行 自然字符串如果你想要指示某些不需要如转义符那样的特别处理的字符串，那么你需要指定一个自然字符串。自然字符串通过给字符串加上前缀r或R来指定。例如r”Newlines are indicated by \n”。 字符串是不可变的 变量不用声明数据类型 ** 表示x^y按位： 与 或 异或 翻转 not 布尔非 if…elif…else 无switch语句 布尔类型 True False 注意大小写 函数range（onenum，twonum，count）序列从onenum到twonum不包括num 当有count时count为步数 for循环 for…in 例如for i in range（1，3） DocStrings 文档字符串即函数体中有字符串 可以用 函数名.doc 单独提取文档字符串 文档字符串的惯例是一个多行字符串，它的首行以大写字母开始，句号结尾。第二行是空行，从第三行开始是详细的描述。 强烈建议 你在你的函数中使用文档字符串时遵循这个惯例。 随机敲了一点代码： def func(x,y): &apos;&apos;&apos;The first def py. I konw it&apos;s a very nice day. so let&apos;s enjoy it .&apos;&apos;&apos; return x*y print &apos;x*y=&apos;,func(21,22) print func.__doc__ #Write by cEngF13h 运行结果： x*y= 462 The first def py. I konw it&apos;s a very nice day. so let&apos;s enjoy it . ——————————今晚学习到这—————————————]]></content>
      <categories>
        <category>Learning</category>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[F1rst b1og（MarkdownPad 2 入门)]]></title>
    <url>%2F2018%2F05%2F24%2FF1rst%20b1og%2F</url>
    <content type="text"><![CDATA[#表示标题大小===html的\&lt;h>标签;‘ - ‘ + 空格 + ‘ - ‘ or ‘ * ‘ 表示无序列表‘ > ‘ +一个字符的空格表示引用 插入图片方法 ![]()我发现其实完整写法是![Alt text](picture-href “optional title”)Alt text为图片丢失时爆出的信息 据说还有为SEO提供搜索 optional title为鼠标悬置于图片时爆出的信息例:![](https://i.imgur.com/TpB1UcB.jpg) 图片的链接为 https://i.imgur.com/TpB1UcB.jpg插入链接方法[www.baidu.com](www.baidu.com）此处应该是半角方括号里面写链接的名字 括号里面写链接粗体 斜体粗体 粗体 斜体 斜体 **包裹粗体* 包裹斜体表格这个貌似有点鸡肋 要用表格再说把~ Tables Are Cool col 3 is right-aligned $1600 col 2 is centered $12 zebra stripes are neat $1 最后就是MarkdownPad 2支持内嵌html因为MarkdownPad 2不支持修改图片尺寸 字体颜色风格之类的 还有吧啦吧啦很多 所以html还是很重要的插入图片不说太多 此处用相对路径不好因为容易造成网页丢失图 还是上传图床后使用绝对路径吧图床推荐:七牛https://portal.qiniu.com 不过我注册的时候邮箱一直接受不到验证码…在用贴图库http://www.tietuku.com 自动生成图片外链 html代码 markdown代码 之后有更好的可以share！ 我这里用html标签插入了一张图片 修改了它的宽为200px&lt;img src=&quot;http://i2.bvimg.com/647010/adb7621f338b88c8.jpg&quot; width=200&gt; 还可以用html标签 修改字体颜色 字体风格代码块实现 在代码前加Tab即可function addEvent(obj,type,fn){ if(obj.addEventListener){ return obj.addEventListener(type,fn); }else if(obj.attachEvent){ return obj.attachEvent(&apos;on&apos;+type,fn); } } function addEvent(obj,type,fn){ if(obj.addEventListener){ return obj.addEventListener(type,fn); }else if(obj.attachEvent){ return obj.attachEvent(&apos;on&apos;+type,fn); } } function addEvent(obj,type,fn){ if(obj.addEventListener){ return obj.addEventListener(type,fn); }else if(obj.attachEvent){ return obj.attachEvent(&apos;on&apos;+type,fn); } } 撒花！！花了一个晚自习时间学习MarkdownPad 2 基础操作 今天就这样到此为止吧 当然还要优化tag：1：更换theme 这个theme实在太ugly了2：学习如何实现标题为超链接点进去是内容 而不是内容就占一大版 Write by cEngF13h资料均出自知乎 简书 csdn 2018/5/24 20:34:37]]></content>
      <categories>
        <category>Learning</category>
        <category>MarkdownPad 2</category>
      </categories>
      <tags>
        <tag>MarkdownPad 2</tag>
      </tags>
  </entry>
</search>
